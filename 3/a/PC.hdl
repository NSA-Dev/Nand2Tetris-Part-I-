// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/3/a/PC.hdl
/**
 * A 16-bit counter.
 * if      reset(t): out(t+1) = 0
 * else if load(t):  out(t+1) = in(t)
 * else if inc(t):   out(t+1) = out(t) + 1
 * else              out(t+1) = out(t)
 
 Alright, my observations:
 work from bottom up. That is hirearchy is flipped in this case. 
 >> You start incrementing from the register either way, it is a PC afterall
 >> Then check for increment flag
 >> then load
 >> and so on until you reach reset.
 
 */

 
CHIP PC {
    IN in[16],inc, load, reset;
    OUT out[16];
    
    PARTS:
    //// Replace this comment with your code.
    Inc16(in=currentState, out=incVal);
    Mux16(a=currentState, b=incVal, sel=inc, out=incCHECK);
    Mux16(a=incCHECK, b=in, sel=load, out=loadCHECK);
    Mux16(a=loadCHECK, b=false, sel=reset, out=checkedValue);
    Register(in=checkedValue, load=true, out=out, out=currentState);
    
    




}
